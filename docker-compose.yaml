version: '3.4'

services:
  db:
    image: postgres:14.5
    container_name: db
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dbseed/seed3.sql:/docker-entrypoint-initdb.d/seed.sql

  orders:
    image: ${DOCKER_REGISTRY-}orders
    container_name: orders
    build:
      context: .
      dockerfile: Services/Orders/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=db;Port=5432;Username=postgres;Password=postgres;Database=DB"
    depends_on:
      - db
    ports:
      - 8080:80

  rate:
    image: ${DOCKER_REGISTRY-}rategrpc
    container_name: rate
    build:
      context: .
      dockerfile: Services/Rate/gRPC_Server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=db;Port=5432;Username=postgres;Password=postgres;Database=DB"
    depends_on:
      - db
    ports:
      - "8081:80"

  users:
    image: ${DOCKER_REGISTRY-}users
    container_name: users
    build:
      context: .
      dockerfile: Services/Users/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=db;Port=5432;Username=postgres;Password=postgres;Database=DB"
    depends_on:
      - db
    ports:
      - "8082:80"

  adminer:
    image: adminer:4.8.1
    restart: unless-stopped
    ports:
      - 8088:8080

  #mbroker:
  #  image: rabbitmq:3.11.9-management
  #  restart: unless-stopped
  #  container_name: mbroker
  #  ports:
  #    - 5672:5672
  #    - 15672:15672
  #  environment:
  #    AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
  #   RABBITMQ_DEFAULT_USER: "user1"
  #    RABBITMQ_DEFAULT_PASS: "user1"

volumes:
  postgres_data:
